//
//  MainViewController.swift
//  Comics
//
//  Created by Alex Zbirnik on 25.03.17.
//  Copyright (c) 2017 com.alexzbirnik. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MainViewControllerInput {
    
    func displayTitle(viewModel: Main.Title.ViewModel)
}

protocol MainViewControllerOutput {
    
    func changeTitle(request: Main.Title.Request)
}

class MainViewController: UIViewController, MainViewControllerInput {
    
    var output: MainViewControllerOutput!
    var router: MainRouter!
    
    // MARK: - Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        
        MainConfigurator.sharedInstance.configure(viewController: self)
    }
    
    @IBOutlet weak var menuButton: UIButton!
    
    @IBOutlet weak var menuContainerView: UIView!
    @IBOutlet weak var screenContainerView: UIView!
    @IBOutlet weak var screenContainerViewLeftConstraint: NSLayoutConstraint!
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.configureMenuButton()
        self.defaultTitleOnLoad()
        self.addNotification()
    }
    
    deinit{
        
        NotificationCenter.default.removeObserver(self)
    }
    
    // MARK: - Event handling
    
    func defaultTitleOnLoad() {
        
        let request = Main.Title.Request(selected: MenuItem.stuffList)
        self.output.changeTitle(request: request)
    }
    
    // MARK: - Display logic
    
    func displayTitle(viewModel: Main.Title.ViewModel) {
        
        let title = viewModel.title
        self.navigationItem.title = title
    }
    
    //MARK: - Menu methods
    
    func configureMenuButton() {
        
        if UIDevice.current.userInterfaceIdiom == UIUserInterfaceIdiom.pad {
            
            menuButton.isHidden = true;
        }
    }
    
    var openMenu = false
    
    func menu(open: Bool) {
        
        var leftConstraint: CGFloat = CGFloat.leastNormalMagnitude
        
        if open {
            
            leftConstraint = self.menuContainerView.bounds.size.width
        }
        
        UIView.animate(withDuration: 0.3){
            
            self.screenContainerViewLeftConstraint.constant = leftConstraint
            self.view.layoutIfNeeded()
        }
    }
    
    //MARK: - Actions
    
    @IBAction func menuButtonTouchUpInside(_ sender: Any) {
        
        self.openMenu = !self.openMenu
        self.menu(open: self.openMenu)
        
        NotificationCenter.default.post(name: .menuOpenOrCloseNotificationName, object: NSNumber(value: self.openMenu))
    }
    
    func addNotification() {
        
        NotificationCenter.default.addObserver(self,
                                               selector: #selector(MainViewController.menuSelectedItem(notification:)),
                                               name: NSNotification.Name.menuSelectedItemNotificationName,
                                               object: nil)
        
    }
    
    //MARK: - Notification
    
    func menuSelectedItem(notification: Notification) {
        
        let item = notification.object as! MenuItem
        let request = Main.Title.Request(selected: item)
        
        self.output.changeTitle(request: request)
        
        self.openMenu = false
        self.menu(open: self.openMenu)
        
        NotificationCenter.default.post(name: .menuOpenOrCloseNotificationName, object: NSNumber(value: self.openMenu))
        
    }
}
